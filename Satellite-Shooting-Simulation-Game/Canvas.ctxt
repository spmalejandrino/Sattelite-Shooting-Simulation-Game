#BlueJ class context
comment0.target=class\ Canvas
comment0.text=\nCanvas\ is\ a\ class\ to\ allow\ for\ simple\ graphical\ drawing\ on\ a\ canvas.\nThis\ is\ a\ modification\ of\ the\ general\ purpose\ Canvas,\ specially\ made\ for\nthe\ BlueJ\ "shapes"\ example.\ \n\n@author\:\ Bruce\ Quig\n@author\:\ Michael\ Kolling\ (mik)\n\n@version\:\ 1.6\ (shapes)\n\nNew\ version\ with\ non-static\ canvas\ to\ allow\ mutiple\ canvases\n@author\:\ Dave\ Maharry\n@version\:\ 2.0\n\nNew\ version\ using\ graphics\ only.\ The\ previous\ JLabel\ is\ replaced\ with\na\ text\ graphic\ oblect\ -\ see\ the\ LabelDescription\ inner-class,\ DrwaString\nand\ Redraw\ classes\ \n@author\:\ Carl\ Singer\n@version\:\ 3.0\ -\ August\ 2005\n\n
comment1.target=objects
comment10.params=
comment10.target=boolean\ getVisible()
comment10.text=\nSet\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\nwhen\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\nvisible\ canvas\ to\ the\ front\ of\ other\ windows.\n@param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\nthe\ canvas\ (true\ or\ false)\ \n\n
comment11.params=
comment11.target=DrawingSurface()
comment12.params=g
comment12.target=void\ paint(Graphics)
comment13.params=referenceObject\ color\ shape
comment13.target=void\ draw(Object,String,Shape)
comment13.text=\nDraw\ a\ given\ shape\ onto\ the\ canvas.\n@param\ \ referenceObject\ \ an\ object\ to\ define\ identity\ for\ this\ shape\n@param\ \ color\ \ \ \ \ \ \ \ \ \ \ \ the\ color\ of\ the\ shape\n@param\ \ shape\ \ \ \ \ \ \ \ \ \ \ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\n\n
comment14.params=
comment14.target=int\ getHeight()
comment14.text=\n@return\ -\ the\ height\ of\ the\ canvas\ in\ pixels\n\n
comment15.target=frame
comment16.target=graphic
comment17.params=title\ width\ height\ bgColour
comment17.target=Canvas(String,int,int,Color)
comment17.text=\nCreate\ a\ Canvas.\n@param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\n@param\ width\ \ the\ desired\ width\ for\ the\ canvas\n@param\ height\ \ the\ desired\ height\ for\ the\ canvas\n@param\ bgColour\ \ the\ desired\ background\ colour\ of\ the\ canvas\n\n
comment18.params=title\ width\ height
comment18.target=Canvas(String,int,int)
comment18.text=\nCreate\ a\ Canvas.\ncreates\ canvas\ with\ a\ background\ of\ white\n@param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\n@param\ width\ \ the\ desired\ width\ for\ the\ canvas\n@param\ height\ \ the\ desired\ height\ for\ the\ canvas\n\n\n
comment19.params=title
comment19.target=Canvas(String)
comment19.text=\nCreate\ a\ Canvas.\ncreates\ canvas\ with\ a\ background\ of\ white\ and\ size\ of\ 300\ by\ 300\n@param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\n\n\n
comment2.params=
comment2.target=int\ getWidth()
comment2.text=\n@return\ -\ the\ width\ of\ the\ canvas\ in\ pixels.\n\n
comment20.params=
comment20.target=Canvas()
comment20.text=\nCreate\ a\ Canvas.\ \ncreates\ canvas\ with\ a\ background\ of\ white\ and\ size\ of\ 300\ by\ 300\n\n
comment21.target=shapes
comment22.params=milliseconds
comment22.target=void\ wait(int)
comment22.text=\nWait\ for\ a\ specified\ number\ of\ milliseconds\ before\ finishing.\nThis\ provides\ an\ easy\ way\ to\ specify\ a\ small\ delay\ which\ can\ be\nused\ when\ producing\ animations.\n@param\ \ milliseconds\ \ the\ number\ \n\n
comment23.params=
comment23.target=void\ redraw()
comment23.text=\nRedraw\ all\ shapes\ currently\ on\ the\ Canvas.\n\n
comment24.params=visible
comment24.target=void\ setVisible(boolean)
comment24.text=\nSet\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\nwhen\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\nvisible\ canvas\ to\ the\ front\ of\ other\ windows.\n@param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\nthe\ canvas\ (true\ or\ false)\ \n\n
comment25.target=canvasImage
comment26.params=graphic
comment26.target=void\ draw(Graphics2D)
comment27.target=colorString
comment28.target=label
comment29.target=yCoord
comment3.params=graphic
comment3.target=void\ draw(Graphics2D)
comment30.target=xCoord
comment31.params=label\ xCoord\ yCoord\ color
comment31.target=LabelDescription(String,int,int,String)
comment32.target=backgroundColour
comment33.params=colorString
comment33.target=void\ setForegroundColor(String)
comment33.text=\nSet\ the\ foreground\ colour\ of\ the\ Canvas.\n@param\ \ newColor\ \ \ the\ new\ colour\ for\ the\ foreground\ of\ the\ Canvas\ \n\n
comment34.params=referenceObject
comment34.target=void\ erase(Object)
comment34.text=\nErase\ a\ given\ shape's\ from\ the\ screen.\n@param\ \ referenceObject\ \ the\ shape\ object\ to\ be\ erased\ \n\n
comment35.params=
comment35.target=void\ erase()
comment35.text=\nErase\ the\ whole\ canvas.\ (Does\ not\ repaint.)\n\n
comment36.params=referenceObject\ color\ label\ xCoord\ yCoord
comment36.target=void\ drawString(Object,String,String,int,int)
comment36.text=\nDraw\ a\ label\ (text)\ onto\ the\ canvas.\n@param\ \ referenceObject\ \ an\ object\ to\ define\ identity\ for\ this\ label\n@param\ \ color\ \ \ \ \ \ \ \ \ \ \ \ the\ color\ of\ the\ shape\n@param\ \ label\ \ \ \ \ \ \ \ \ \ \ \ the\ label\ to\ be\ drawn\ on\ the\ canvas\n@param\ \ xCoord\ \ \ \ \ \ \ \ \ \ \ the\ x\ coordinate\ of\ the\ label\ anchor\ point\n@param\ \ yCoord\ \ \ \ \ \ \ \ \ \ \ the\ y\ coordinate\ of\ the\ label\ anchor\ point\n\n
comment4.target=colorString
comment5.target=shape
comment6.params=shape\ color
comment6.target=ShapeDescription(Shape,String)
comment7.target=canvas
comment8.params=
comment8.target=void\ eraseAll()
comment8.text=\nRemove\ all\ shapes\ currently\ on\ the\ Canvas.\n\n
comment9.params=keylistener
comment9.target=void\ setListener(KeyListener)
comment9.text=\nSet\ the\ canvas\ frame\ to\ be\ the\ key\ event\ object\n\n
numComments=37
